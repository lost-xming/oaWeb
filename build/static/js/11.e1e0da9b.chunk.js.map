{"version":3,"sources":["components/formItem/index.js","components/searchCom/formCom.js","components/login/index.jsx","app/login/index.jsx"],"names":["TextArea","Input","RangePicker","Group","DatePicker","Option","Select","TreeNode","TreeSelect","noFun","Format","FormInputItem","item","defaultValue","required","validator","onChange","placeholder","addonBefore","name","label","onBlurFun","extra","onEnter","addonAfter","disabled","inpuType","others","style","className","maxLength","placeholderStr","onChangeFun","onEnterFun","rules","message","Item","key","initialValue","type","onBlur","onPressEnter","FormInputItem2","Password","FormSelectItem","mode","arr","allowClear","map","it","value","lab","FormTimerItem","moment","timer","format","FormRangePckerItem","FormTextAreaItem","rows","FormRadioItem","index","FormFileItem","url","beforeUpload","normFile","normFileFun","beforeUploadFun","tokenStr","localStorage","getItem","token","JSON","parse","valuePropName","getValueFromEvent","action","listType","headers","FormTreeSelectItem","multiple","renderChildren","arrData","id","title","children","Array","isArray","showSearch","width","dropdownStyle","maxHeight","overflow","treeDefaultExpandAll","SearchCom","this","props","searchArr","isNotShow","_renderItem","Component","defaultProps","Login","formRef","React","createRef","initData","loginInfo","getLoginInfo","current","setFieldsValue","password","submit","onCheckedChange","e","setState","checked","target","onFinish","values","state","history","setLoginInfo","setUserInfo","push","formArr","ref","formItemLayout","size","htmlType","block","connect","dispatch","withRouter","LoginCom"],"mappings":"iGAAA,uaAMQA,GANR,OAM4BC,IAApBD,UACAE,GADoBD,IAAVE,MACMC,IAAhBF,aACAG,EAAWC,IAAXD,OACAE,EAAaC,IAAbD,SACFE,EAAQ,aACRC,EAAS,aACFC,EAAgB,WAAmC,IAAlCC,EAAiC,uDAA1B,GAAIC,EAAsB,uDAAP,GAEhDC,EAiBAF,EAjBAE,SACAC,EAgBAH,EAhBAG,UACAC,EAeAJ,EAfAI,SACAC,EAcAL,EAdAK,YACAC,EAaAN,EAbAM,YACAC,EAYAP,EAZAO,KACAC,EAWAR,EAXAQ,MACAC,EAUAT,EAVAS,UACAC,EASAV,EATAU,MAEAC,GAOAX,EARAY,WAQAZ,EAPAW,SACAE,EAMAb,EANAa,SACAC,EAKAd,EALAc,SAbJ,EAkBId,EAJAe,cAdJ,MAca,GAdb,EAeIC,EAGAhB,EAHAgB,MAfJ,EAkBIhB,EAFAiB,iBAhBJ,MAgBgB,GAhBhB,IAkBIjB,EADAkB,iBAjBJ,MAiBgB,GAjBhB,EAmBMC,EAAiBd,GAAW,4BAAUG,GACtCY,EAAchB,GAAYP,EAC1BwB,EAAaV,GAAWd,EACxByB,EAAQnB,EAAY,CAAC,CAAEA,cAAe,CAAC,CAAED,WAAUqB,QAAQ,qBAAD,OAAQf,KAExE,OACI,kBAAC,IAAKgB,KAAN,eACIC,IAAKlB,EACLC,MAAOA,EACPD,KAAMA,EACNL,SAAUA,EACVwB,aAAczB,EAAaM,GAC3BG,MAAOA,EACPY,MAAOA,GACHP,GAEJ,kBAAC,IAAD,CACIT,YAAaA,EAEbO,SAAUA,EACVc,KAAMb,EACNc,OAAQnB,EACRoB,aAAcR,EACdL,MAAOA,EACPE,UAAWA,EACXD,UAAWA,EACXb,SAAUgB,EACVf,YAAac,MAMhBW,EAAiB,WAAmC,IAAlC9B,EAAiC,uDAA1B,GAAIC,EAAsB,uDAAP,GAEjDC,EAWAF,EAXAE,SACAC,EAUAH,EAVAG,UACAE,EASAL,EATAK,YACAE,EAQAP,EARAO,KACAC,EAOAR,EAPAQ,MACAC,EAMAT,EANAS,UACAE,EAKAX,EALAW,QAPJ,EAYIX,EAJAe,cARJ,MAQa,GARb,EASIC,EAGAhB,EAHAgB,MATJ,EAYIhB,EAFAiB,iBAVJ,MAUgB,GAVhB,IAYIjB,EADAkB,iBAXJ,MAWgB,GAXhB,EAaMC,EAAiBd,GAAW,4BAAUG,GACtCa,EAAaV,GAAWd,EACxByB,EAAQnB,EAAY,CAAC,CAAEA,cAAe,CAAC,CAAED,WAAUqB,QAAQ,qBAAD,OAAQf,KAExE,OACI,kBAAC,IAAKgB,KAAN,eACIC,IAAKlB,EACLC,MAAOA,EACPD,KAAMA,EACNL,SAAUA,EACVwB,aAAczB,EAAaM,GAC3Be,MAAOA,GACHP,GAEJ,kBAAC,IAAMgB,SAAP,CACIH,OAAQnB,EACRO,MAAOA,EACPE,UAAWA,EACXD,UAAWA,EACXZ,YAAac,EACbU,aAAcR,MAMjBW,EAAiB,WAAmC,IAAlChC,EAAiC,uDAA1B,GAAIC,EAAsB,uDAAP,GAC7CC,EAAqGF,EAArGE,SAAUC,EAA2FH,EAA3FG,UAAWC,EAAgFJ,EAAhFI,SAAUC,EAAsEL,EAAtEK,YAAmBE,GAAmDP,EAAzDiC,KAAyDjC,EAAnDO,MAAMC,EAA6CR,EAA7CQ,MAAO0B,EAAsClC,EAAtCkC,IAAKxB,EAAiCV,EAAjCU,MAAOG,EAA0Bb,EAA1Ba,SAAnF,EAA6Gb,EAAhBe,cAA7F,MAAsG,GAAtG,EAEMI,EAAiBd,GAAW,4BAAUG,GACtCY,EAAchB,GAAYP,EAC1ByB,EAAQnB,EAAY,CAAC,CAAEA,cAAe,CAAC,CAAED,WAAUqB,QAAQ,qBAAD,OAAQf,KACxE,OACI,kBAAC,IAAKgB,KAAN,eACIC,IAAKlB,EACLA,KAAMA,EACNC,MAAOA,EACPE,MAAOA,EACPgB,aAAczB,EAAaM,GAC3Be,MAAOA,GACHP,GAEJ,kBAAC,IAAD,CACIoB,YAAU,EACVtB,SAAUA,EAEVR,YAAac,EACbf,SAAUgB,GAETc,EAAIE,KAAI,SAACC,GACN,OACI,kBAAC5C,EAAD,CAAQgC,IAAKY,EAAGC,MAAOA,MAAOD,EAAGC,OAC5BD,EAAGE,KAAOF,EAAG7B,aAS7BgC,EAAgB,WAAmC,IAAlCxC,EAAiC,uDAA1B,GAAIC,EAAsB,uDAAP,GAC5CC,EAA6EF,EAA7EE,SAAUC,EAAmEH,EAAnEG,UAAWC,EAAwDJ,EAAxDI,SAAUG,EAA8CP,EAA9CO,KAAMC,EAAwCR,EAAxCQ,MAAOE,EAAiCV,EAAjCU,MAAOG,EAA0Bb,EAA1Ba,SAA3D,EAAqFb,EAAhBe,cAArE,MAA8E,GAA9E,EACMO,EAAQnB,EAAY,CAAC,CAAEA,cAAe,CAAC,CAAEwB,KAAM,SAAUzB,WAAUqB,QAAQ,qBAAD,OAAQf,KAClFY,EAAchB,GAAYP,EAChC,OACI,kBAAC,IAAK2B,KAAN,eACIC,IAAKlB,EACLA,KAAMA,EACNC,MAAOA,EACPE,MAAOA,EACPgB,aAAczB,EAAaM,GAAQkC,IAAOxC,EAAaM,IAAS,KAChEe,MAAOA,GACHP,GAEJ,kBAAC,IAAD,CACIE,UAAU,oBACVJ,SAAUA,EACVT,SAAU,SAACkC,EAAOI,GAAR,OAAkBtB,EAAYkB,EAAOI,EAAO1C,IACtD2C,OAAQ7C,MAMX8C,EAAqB,WAAmC,IAAlC5C,EAAiC,uDAA1B,GAAIC,EAAsB,uDAAP,GACjDC,EAA6EF,EAA7EE,SAAUC,EAAmEH,EAAnEG,UAAWC,EAAwDJ,EAAxDI,SAAUG,EAA8CP,EAA9CO,KAAMC,EAAwCR,EAAxCQ,MAAOE,EAAiCV,EAAjCU,MAAOG,EAA0Bb,EAA1Ba,SAA3D,EAAqFb,EAAhBe,cAArE,MAA8E,GAA9E,EACIO,EAAQnB,EAAY,CAAC,CAAEA,cAAe,CAAC,CAAED,WAAUqB,QAAQ,qBAAD,OAAQf,KACtEc,EAAQpB,EAAWoB,EAAQ,GAC3B,IAAMF,EAAchB,GAAYP,EAChC,OACI,kBAAC,IAAK2B,KAAN,eACIC,IAAKlB,EACLA,KAAMA,EACNC,MAAOA,EACPE,MAAOA,EACPgB,aAAczB,EAAaM,GAAQkC,IAAOxC,EAAaM,IAAS,KAChEe,MAAOA,GACHP,GAEJ,kBAACzB,EAAD,CACI2B,UAAU,oBACVJ,SAAUA,EACVT,SAAU,SAACkC,EAAOI,GAAR,OAAkBtB,EAAYkB,EAAOI,EAAO1C,IACtD2C,OAAQ7C,MAMX+C,EAAmB,WAAmC,IAAlC7C,EAAiC,uDAA1B,GAAIC,EAAsB,uDAAP,GAC/CC,EAAqGF,EAArGE,SAAUC,EAA2FH,EAA3FG,UAAWC,EAAgFJ,EAAhFI,SAAUC,EAAsEL,EAAtEK,YAAaE,EAAyDP,EAAzDO,KAAMC,EAAmDR,EAAnDQ,MAAOC,EAA4CT,EAA5CS,UAAWC,EAAiCV,EAAjCU,MAAOG,EAA0Bb,EAA1Ba,SAAnF,EAA6Gb,EAAhBe,cAA7F,MAAsG,GAAtG,EACMI,EAAiBd,GAAW,4BAAUG,GACtCY,EAAchB,GAAYP,EAC1ByB,EAAQnB,EAAY,CAAC,CAAEA,cAAe,CAAC,CAAED,WAAUqB,QAAQ,qBAAD,OAAQf,KACxE,OACI,kBAAC,IAAKgB,KAAN,eACIC,IAAKlB,EACLC,MAAOA,EACPD,KAAMA,EACNL,SAAUA,EACVwB,aAAczB,EAAaM,GAC3BG,MAAOA,EACPY,MAAOA,GACHP,GAEJ,kBAAC3B,EAAD,CACIyB,SAAUA,EACVe,OAAQnB,EACRL,SAAUgB,EACVf,YAAac,EACb2B,KAAM,MAMTC,EAAgB,WAAmC,IAAlC/C,EAAiC,uDAA1B,GAAIC,EAAsB,uDAAP,GAC5CC,EAAuFF,EAAvFE,SAAUC,EAA6EH,EAA7EG,UAAWC,EAAkEJ,EAAlEI,SAAUG,EAAwDP,EAAxDO,KAAMC,EAAkDR,EAAlDQ,MAAOE,EAA2CV,EAA3CU,MAAOG,EAAoCb,EAApCa,SAA3D,EAA+Fb,EAA1Be,cAArE,MAA8E,GAA9E,IAA+Ff,EAAbkC,WAAlF,MAAwF,GAAxF,EACMd,EAAchB,GAAYP,EAC1ByB,EAAQnB,EAAY,CAAC,CAAEA,cAAe,CAAC,CAAED,WAAUqB,QAAQ,qBAAD,OAAQf,KACxE,OACI,kBAAC,IAAKgB,KAAN,eACIC,IAAKlB,EACLC,MAAOA,EACPD,KAAMA,EACNL,SAAUA,EACVwB,aAAczB,EAAaM,GAC3BG,MAAOA,EACPY,MAAOA,GACHP,GAEJ,kBAAC,IAAMxB,MAAP,CAAasB,SAAUA,EAAUT,SAAUgB,GACtCc,EAAIE,KAAI,SAACC,EAAIW,GACV,OAAO,kBAAC,IAAD,CAAOvB,IAAG,UAAKuB,EAAL,UAAoBV,MAAOD,EAAGC,OAAQD,EAAG7B,aAOjEyC,EAAe,WAAmC,IAAD,EAAjCjD,EAAiC,uDAA1B,GAAIC,EAAsB,uDAAP,GAC3CC,EAAgGF,EAAhGE,SAAUK,EAAsFP,EAAtFO,KAAMC,EAAgFR,EAAhFQ,MAAO0C,EAAyElD,EAAzEkD,IAAKxC,EAAoEV,EAApEU,MAAOP,EAA6DH,EAA7DG,UAAWC,EAAkDJ,EAAlDI,SAAU+C,EAAwCnD,EAAxCmD,aAAcC,EAA0BpD,EAA1BoD,SAA9E,EAAwGpD,EAAhBe,cAAxF,MAAiG,GAAjG,EACMO,EAAQnB,EAAY,CAAC,CAAEA,cAAe,CAAC,CAAED,WAAUqB,QAAQ,qBAAD,OAAQf,KAClEY,EAAchB,GAAYP,EAC1BwD,EAAcD,GAAYvD,EAC1ByD,EAAkBH,GAAgBtD,EAClC0D,EAAWC,aAAaC,QAAQ,SAChCC,EAAQH,EAAQ,UAAGI,KAAKC,MAAML,UAAd,aAAG,EAAsBG,MAAQ,GACvD,OACI,kBAAC,IAAKlC,KAAN,eACIC,IAAKlB,EACLC,MAAOA,EACPD,KAAMA,EACNL,SAAUA,EACVwB,aAAczB,EAAaM,IAAS,GACpCG,MAAOA,EACPY,MAAOA,EACPuC,cAAc,WACdC,kBAAmBT,GACftC,GAEJ,kBAAC,IAAD,CACIR,KAAK,OACLwD,OAAQb,EACRc,SAAS,UACTb,aAAcG,EACdlD,SAAUgB,EACV6C,QAAS,CACLP,UAGJ,kBAAC,IAAD,CAAQzC,UAAU,gBACd,kBAAC,IAAD,MADJ,oBAsCHiD,EAAqB,WAAmC,IAAlClE,EAAiC,uDAA1B,GAAIC,EAAsB,uDAAP,GAErDC,EAUAF,EAVAE,SACAC,EASAH,EATAG,UACAC,EAQAJ,EARAI,SACAC,EAOAL,EAPAK,YACAE,EAMAP,EANAO,KACAC,EAKAR,EALAQ,MANJ,EAWIR,EAJAmE,gBAPJ,WAWInE,EAHAkC,WARJ,MAQU,GARV,EASIxB,EAEAV,EAFAU,MATJ,EAWIV,EADAe,cAVJ,MAUa,GAVb,EAYMI,EAAiBd,GAAW,4BAAUG,GACtCY,EAAchB,GAAYP,EAC1ByB,EAAQnB,EAAY,CAAC,CAAEA,cAAe,CAAC,CAAED,WAAUqB,QAAQ,qBAAD,OAAQf,KAClE4D,EAAiB,SAAjBA,IAAoC,IAAlBC,EAAiB,uDAAP,GAC9B,OAAOA,EAAQjC,KAAI,SAACC,GAChB,OACI,kBAAC1C,EAAD,CAAU8B,IAAKY,EAAGiC,GAAIhC,MAAOD,EAAGiC,GAAIC,MAAOlC,EAAG9B,MAC1C8B,EAAGmC,UAAYC,MAAMC,QAAQrC,EAAGmC,WAAaJ,EAAe/B,EAAGmC,eAK/E,OACI,kBAAC,IAAKhD,KAAN,eACIC,IAAKlB,EACLA,KAAMA,EACNC,MAAOA,EACPE,MAAOA,EACPgB,aAAczB,EAAaM,GAC3Be,MAAOA,GACHP,GAEJ,kBAAC,IAAD,CACI4D,YAAU,EACV3D,MAAO,CAAE4D,MAAO,QAChBC,cAAe,CAAEC,UAAW,IAAKC,SAAU,QAC3C1E,YAAac,EACbgB,YAAU,EACV6C,sBAAoB,EACpB5E,SAAUgB,EACV+C,SAAUA,GAETjC,EAAIE,KAAI,SAACC,GACN,OACI,kBAAC1C,EAAD,CAAU8B,IAAKY,EAAGiC,GAAIhC,MAAOD,EAAGiC,GAAIC,MAAOlC,EAAG9B,MACzC8B,EAAGmC,UAAYC,MAAMC,QAAQrC,EAAGmC,WAAaJ,EAAe/B,EAAGmC,kB,oHCvVtFS,G,wKAWL,WACI,MAAoCC,KAAKC,MAAjCC,EAAR,EAAQA,UAAWnF,EAAnB,EAAmBA,aACnB,OAAOmF,EAAUhD,KAAI,SAAApC,GACvB,IAAQ2B,EAAoB3B,EAApB2B,KACR,GAD4B3B,EAAdqF,UAEb,OAAO,KAEF,OAAQ1D,GACJ,IAAK,QACb,OAAO5B,YAAcC,EAAMC,GAC5B,IAAK,WACJ,OAAO6B,YAAe9B,EAAMC,GACpB,IAAK,SACD,OAAO+B,YAAehC,EAAMC,GAChC,IAAK,QACD,OAAOuC,YAAcxC,EAAMC,GAC/B,IAAK,WACD,OAAO4C,YAAiB7C,EAAMC,GAClC,IAAK,OACD,OAAOgD,YAAajD,EAAMC,GAC9B,IAAK,QACb,OAAO8C,YAAc/C,EAAMC,GAC5B,IAAK,aACJ,OAAOiE,YAAmBlE,EAAMC,GACxB,QACI,OAAO,W,oBAKvB,WACI,OACI,yBAAKgB,UAAU,YACViE,KAAKI,mB,GA5CKC,cAAlBN,EAMEO,aAAe,CAClBJ,UAAW,GACXnF,aAAc,IA0CJgF,O,qPCtDTQ,E,kDAWF,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IAHVO,QAAUC,IAAMC,YAEG,EAWnBC,SAAW,WAEP,IAAMC,EAAYC,cAClB,EAAKL,QAAQM,QAAQC,eAAe,CAChC1F,KAAMuF,EAAUvF,KAChB2F,SAAUJ,EAAUI,YAhBT,EAqBnB7E,WAAa,WACT,EAAKqE,QAAQM,QAAQG,UAtBN,EAyBnBC,gBAAkB,SAACC,GACf,EAAKC,SAAS,CACVC,QAASF,EAAEG,OAAOD,WA3BP,EA+BnBE,SAAW,SAACC,GACR,IAAQH,EAAY,EAAKI,MAAjBJ,QACAK,EAAY,EAAKzB,MAAjByB,QACJL,GACAM,YAAaH,GAEjBI,YAAYJ,GACZE,EAAQG,KAAK,MApCb,EAAKJ,MAAQ,CACTJ,SAAS,GAHE,E,qDAOnB,WACIrB,KAAKW,a,oBAiCT,WACI,IAAQU,EAAYrB,KAAKyB,MAAjBJ,QACFS,EAAU,CACZ,CACIrF,KAAM,QACNpB,KAAM,OACNC,MAAO,eACPH,YAAa,oCACbH,UAAU,EACVe,UAAW,aACXN,QAASuE,KAAK7D,WACdH,UAAW,IAEf,CACIS,KAAM,WACNpB,KAAM,WACNC,MAAO,eACPM,SAAU,WACVT,YAAa,oCACbH,UAAU,EACVe,UAAW,aACXN,QAASuE,KAAK7D,WACdH,UAAW,KAGnB,OACI,yBAAKD,UAAU,kBACX,yBAAKA,UAAU,eACX,0DADJ,IACsB,0BAAMA,UAAU,gBAAhB,qDAEtB,kBAAC,IAAD,eAAMgG,IAAK/B,KAAKQ,QAASe,SAAUvB,KAAKuB,UAAcS,YAAe,EAAG,KACpE,kBAAC,IAAD,CAAS9B,UAAW4B,IACpB,yBAAK/F,UAAU,gBACX,kBAAC,IAAD,CAAUsF,QAASA,EAASnG,SAAU8E,KAAKkB,iBAA3C,4BAGA,yBAAKnF,UAAU,uBAAf,mCAEJ,kBAAC,IAAD,CAAQU,KAAK,UAAUwF,KAAK,QAAQC,SAAS,SAASC,OAAK,GAA3D,uB,GA1FA1B,IAAMJ,WAApBE,EAKKD,aAAe,CAClBoB,QAAS,IA4FjB,IAEeU,eAFE,iBAAiB,MACd,SAACC,GAAD,MAAe,KACpBD,CAA+BE,YAAW/B,IC/F1CgC,UAVE,WACb,OACI,yBAAKxG,UAAU,gBACX,yBAAKA,UAAU,iBACX,kBAAC,EAAD","file":"static/js/11.e1e0da9b.chunk.js","sourcesContent":["import React from 'react';\nimport { Input, Form, Select, DatePicker, Upload, Button, Radio, TreeSelect } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport './index.css';\n\nconst { TextArea, Group } = Input;\nconst { RangePicker } = DatePicker;\nconst { Option } = Select;\nconst { TreeNode } = TreeSelect;\nconst noFun = () => { };\nconst Format = 'YYYY-MM-DD';\nexport const FormInputItem = (item = {}, defaultValue = {}) => {\n    const {\n        required,\n        validator,\n        onChange,\n        placeholder,\n        addonBefore,\n        name,\n        label,\n        onBlurFun,\n        extra,\n        addonAfter,\n        onEnter,\n        disabled,\n        inpuType,\n        others = {},\n        style,\n        className = '',\n        maxLength = 10,\n    } = item;\n    const placeholderStr = placeholder || `请输入${label}`;\n    const onChangeFun = onChange || noFun;\n    const onEnterFun = onEnter || noFun;\n    const rules = validator ? [{ validator }] : [{ required, message: `请输入${label}` }];\n    // const addonAfterNode = addonAfter ? addonAfter() : null;\n    return (\n        <Form.Item\n            key={name}\n            label={label}\n            name={name}\n            required={required}\n            initialValue={defaultValue[name]}\n            extra={extra}\n            rules={rules}\n            {...others}\n        >\n            <Input\n                addonBefore={addonBefore}\n                // addonAfter={addonAfterNode}\n                disabled={disabled}\n                type={inpuType}\n                onBlur={onBlurFun}\n                onPressEnter={onEnterFun}\n                style={style}\n                maxLength={maxLength}\n                className={className}\n                onChange={onChangeFun}\n                placeholder={placeholderStr}\n            />\n        </Form.Item>\n    );\n};\n\nexport const FormInputItem2 = (item = {}, defaultValue = {}) => {\n    const {\n        required,\n        validator,\n        placeholder,\n        name,\n        label,\n        onBlurFun,\n        onEnter,\n        others = {},\n        style,\n        className = '',\n        maxLength = 10,\n    } = item;\n    const placeholderStr = placeholder || `请输入${label}`;\n    const onEnterFun = onEnter || noFun;\n    const rules = validator ? [{ validator }] : [{ required, message: `请输入${label}` }];\n    // const addonAfterNode = addonAfter ? addonAfter() : null;\n    return (\n        <Form.Item\n            key={name}\n            label={label}\n            name={name}\n            required={required}\n            initialValue={defaultValue[name]}\n            rules={rules}\n            {...others}\n        >\n            <Input.Password\n                onBlur={onBlurFun}\n                style={style}\n                maxLength={maxLength}\n                className={className}\n                placeholder={placeholderStr}\n                onPressEnter={onEnterFun}\n            />\n        </Form.Item>\n    );\n};\n\nexport const FormSelectItem = (item = {}, defaultValue = {}) => {\n    const { required, validator, onChange, placeholder, mode, name, label, arr, extra, disabled, others = {} } = item;\n    // const modeStr = mode || 'tags';\n    const placeholderStr = placeholder || `请选择${label}`;\n    const onChangeFun = onChange || noFun;\n    const rules = validator ? [{ validator }] : [{ required, message: `请选择${label}` }];\n    return (\n        <Form.Item\n            key={name}\n            name={name}\n            label={label}\n            extra={extra}\n            initialValue={defaultValue[name]}\n            rules={rules}\n            {...others}\n        >\n            <Select\n                allowClear\n                disabled={disabled}\n                // mode={modeStr}\n                placeholder={placeholderStr}\n                onChange={onChangeFun}\n            >\n                {arr.map((it) => {\n                    return (\n                        <Option key={it.value} value={it.value}>\n                            {it.lab || it.label}\n                        </Option>\n                    );\n                })}\n            </Select>\n        </Form.Item>\n    );\n};\n\nexport const FormTimerItem = (item = {}, defaultValue = {}) => {\n    const { required, validator, onChange, name, label, extra, disabled, others = {} } = item;\n    const rules = validator ? [{ validator }] : [{ type: 'object', required, message: `请输入${label}` }];\n    const onChangeFun = onChange || noFun;\n    return (\n        <Form.Item\n            key={name}\n            name={name}\n            label={label}\n            extra={extra}\n            initialValue={defaultValue[name] ? moment(defaultValue[name]) : null}\n            rules={rules}\n            {...others}\n        >\n            <DatePicker\n                className=\"date_picker_style\"\n                disabled={disabled}\n                onChange={(value, timer) => onChangeFun(value, timer, item)}\n                format={Format}\n            />\n        </Form.Item>\n    );\n};\n\nexport const FormRangePckerItem = (item = {}, defaultValue = {}) => {\n    const { required, validator, onChange, name, label, extra, disabled, others = {} } = item;\n    let rules = validator ? [{ validator }] : [{ required, message: `请输入${label}` }];\n    rules = required ? rules : [];\n    const onChangeFun = onChange || noFun;\n    return (\n        <Form.Item\n            key={name}\n            name={name}\n            label={label}\n            extra={extra}\n            initialValue={defaultValue[name] ? moment(defaultValue[name]) : null}\n            rules={rules}\n            {...others}\n        >\n            <RangePicker\n                className=\"date_picker_style\"\n                disabled={disabled}\n                onChange={(value, timer) => onChangeFun(value, timer, item)}\n                format={Format}\n            />\n        </Form.Item>\n    );\n};\n\nexport const FormTextAreaItem = (item = {}, defaultValue = {}) => {\n    const { required, validator, onChange, placeholder, name, label, onBlurFun, extra, disabled, others = {} } = item;\n    const placeholderStr = placeholder || `请输入${label}`;\n    const onChangeFun = onChange || noFun;\n    const rules = validator ? [{ validator }] : [{ required, message: `请输入${label}` }];\n    return (\n        <Form.Item\n            key={name}\n            label={label}\n            name={name}\n            required={required}\n            initialValue={defaultValue[name]}\n            extra={extra}\n            rules={rules}\n            {...others}\n        >\n            <TextArea\n                disabled={disabled}\n                onBlur={onBlurFun}\n                onChange={onChangeFun}\n                placeholder={placeholderStr}\n                rows={4}\n            />\n        </Form.Item>\n    );\n};\n\nexport const FormRadioItem = (item = {}, defaultValue = {}) => {\n    const { required, validator, onChange, name, label, extra, disabled, others = {}, arr = [] } = item;\n    const onChangeFun = onChange || noFun;\n    const rules = validator ? [{ validator }] : [{ required, message: `请输入${label}` }];\n    return (\n        <Form.Item\n            key={name}\n            label={label}\n            name={name}\n            required={required}\n            initialValue={defaultValue[name]}\n            extra={extra}\n            rules={rules}\n            {...others}\n        >\n            <Radio.Group disabled={disabled} onChange={onChangeFun}>\n                {arr.map((it, index) => {\n                    return <Radio key={`${index}_radio`} value={it.value}>{it.label}</Radio>;\n                })}\n            </Radio.Group>\n        </Form.Item>\n    );\n};\n\nexport const FormFileItem = (item = {}, defaultValue = {}) => {\n    const { required, name, label, url, extra, validator, onChange, beforeUpload, normFile, others = {} } = item;\n    const rules = validator ? [{ validator }] : [{ required, message: `请上传${label}` }];\n    const onChangeFun = onChange || noFun;\n    const normFileFun = normFile || noFun;\n    const beforeUploadFun = beforeUpload || noFun;\n    const tokenStr = localStorage.getItem('token');\n    const token = tokenStr ? JSON.parse(tokenStr)?.token : '';\n    return (\n        <Form.Item\n            key={name}\n            label={label}\n            name={name}\n            required={required}\n            initialValue={defaultValue[name] || []}\n            extra={extra}\n            rules={rules}\n            valuePropName=\"fileList\"\n            getValueFromEvent={normFileFun}\n            {...others}\n        >\n            <Upload\n                name=\"file\"\n                action={url}\n                listType=\"picture\"\n                beforeUpload={beforeUploadFun}\n                onChange={onChangeFun}\n                headers={{\n                    token,\n                }}\n            >\n                <Button className=\"add_file_btn\">\n                    <CloudUploadOutlined /> 上传\n                </Button>\n            </Upload>\n        </Form.Item>\n    );\n};\n\nexport const GroupInputItem = (...params) => {\n    const [leftSelectValue, optionArr, leftValue, onSelectChange, onInputChange] = params;\n    return (\n        <Group compact className=\"form_option1\">\n            <Select\n                value={leftSelectValue}\n                placeholder=\"请选择...\"\n                onChange={onSelectChange}\n                className=\"form_option1_left\"\n            >\n                {optionArr.map((item, index) => {\n                    return (\n                        <Option key={`option_left_${index}`} value={item.name}>\n                            {item.label}\n                        </Option>\n                    );\n                })}\n            </Select>\n            <Input\n                className=\"form_option1_right\"\n                value={leftValue}\n                style={{ width: 200 }}\n                onChange={onInputChange}\n                allowClear\n                placeholder=\"请输入...\"\n            />\n        </Group>\n    );\n};\n\nexport const FormTreeSelectItem = (item = {}, defaultValue = {}) => {\n    const {\n        required,\n        validator,\n        onChange,\n        placeholder,\n        name,\n        label,\n        multiple = false,\n        arr = [],\n        extra,\n        others = {},\n    } = item;\n    const placeholderStr = placeholder || `请选择${label}`;\n    const onChangeFun = onChange || noFun;\n    const rules = validator ? [{ validator }] : [{ required, message: `请选择${label}` }];\n    const renderChildren = (arrData = []) => {\n        return arrData.map((it) => {\n            return (\n                <TreeNode key={it.id} value={it.id} title={it.name}>\n                   {it.children && Array.isArray(it.children) && renderChildren(it.children)}\n                </TreeNode>\n            );\n        });\n     };\n    return (\n        <Form.Item\n            key={name}\n            name={name}\n            label={label}\n            extra={extra}\n            initialValue={defaultValue[name]}\n            rules={rules}\n            {...others}\n        >\n            <TreeSelect\n                showSearch\n                style={{ width: '100%' }}\n                dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\n                placeholder={placeholderStr}\n                allowClear\n                treeDefaultExpandAll\n                onChange={onChangeFun}\n                multiple={multiple}\n            >\n                {arr.map((it) => {\n                    return (\n                        <TreeNode key={it.id} value={it.id} title={it.name}>\n                            {it.children && Array.isArray(it.children) && renderChildren(it.children)}\n                        </TreeNode>\n                    );\n                })}\n            </TreeSelect>\n        </Form.Item>\n    );\n};\n","import React, { Component } from 'react';\nimport Proptypes from 'prop-types';\nimport {\n\tFormInputItem,\n\tFormInputItem2,\n    FormSelectItem,\n    FormTimerItem,\n    FormTextAreaItem,\n    FormFileItem,\n\tFormRadioItem,\n\tFormTreeSelectItem,\n} from '../formItem';\nimport './index.less';\n\nclass SearchCom extends Component {\n\tstatic propTypes = {\n\t    searchArr: Proptypes.array,\n\t    defaultValue: Proptypes.object,\n\t};\n\n\tstatic defaultProps = {\n\t    searchArr: [],\n\t    defaultValue: {},\n\t};\n\n\t_renderItem() {\n\t    const { searchArr, defaultValue } = this.props;\n\t    return searchArr.map(item => {\n\t\t\tconst { type, isNotShow } = item;\n\t\t\tif (isNotShow) {\n\t\t\t\treturn null;\n\t\t\t}\n\t        switch (type) {\n\t            case 'input':\n\t\t\t\t\treturn FormInputItem(item, defaultValue);\n\t\t\t\tcase 'password':\n\t\t\t\t\treturn FormInputItem2(item, defaultValue);\n\t            case 'select':\n\t                return FormSelectItem(item, defaultValue);\n\t            case 'timer':\n\t                return FormTimerItem(item, defaultValue);\n\t            case 'textArea':\n\t                return FormTextAreaItem(item, defaultValue);\n\t            case 'file':\n\t                return FormFileItem(item, defaultValue);\n\t            case 'radio':\n\t\t\t\t\treturn FormRadioItem(item, defaultValue);\n\t\t\t\tcase 'treeSelect':\n\t\t\t\t\treturn FormTreeSelectItem(item, defaultValue);\n\t            default:\n\t                return null;\n\t        }\n\t    });\n\t}\n\n\trender() {\n\t    return (\n\t        <div className=\"form_com\">\n\t            {this._renderItem()}\n\t        </div>\n\t    );\n\t}\n}\n\nexport default SearchCom;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { Button, message, Form, Checkbox } from 'antd';\nimport PropTypes from 'prop-types';\nimport './index.less';\nimport FormCom from '../searchCom/formCom';\nimport { formItemLayout } from '../../utils/index';\nimport { setLoginInfo, getLoginInfo, setUserInfo } from '../../utils/localStorageSet';\n\nclass Login extends React.Component {\n    static propTypes = {\n        history: PropTypes.object,\n    };\n\n    static defaultProps = {\n        history: {},\n    };\n\n    formRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            checked: false,\n        };\n    }\n\n    componentDidMount() {\n        this.initData();\n    }\n\n    initData = () => {\n        // 记住密码 -- 从cookie中获取账户信息\n        const loginInfo = getLoginInfo();\n        this.formRef.current.setFieldsValue({\n            name: loginInfo.name,\n            password: loginInfo.password,\n        });\n        // 判断是否已经登录 ，如果已经登录 ，直接跳转\n    };\n\n    onEnterFun = () => {\n        this.formRef.current.submit();\n    };\n\n    onCheckedChange = (e) => {\n        this.setState({\n            checked: e.target.checked,\n        });\n    };\n\n    onFinish = (values) => {\n        const { checked } = this.state;\n        const { history } = this.props;\n        if (checked) {\n            setLoginInfo(values);\n        }\n        setUserInfo(values);\n        history.push('/');\n    };\n\n    render() {\n        const { checked } = this.state;\n        const formArr = [\n            {\n                type: 'input',\n                name: 'name',\n                label: '账户',\n                placeholder: '请输入账户...',\n                required: true,\n                className: 'name_style',\n                onEnter: this.onEnterFun,\n                maxLength: 10,\n            },\n            {\n                type: 'password',\n                name: 'password',\n                label: '密码',\n                inpuType: 'password',\n                placeholder: '请输入密码...',\n                required: true,\n                className: 'name_style',\n                onEnter: this.onEnterFun,\n                maxLength: 10,\n            },\n        ];\n        return (\n            <div className=\"loagin_com_box\">\n                <div className=\"login_title\">\n                    <span>欢迎登录</span> <span className=\"common_color\">蔡甸城投智能交通</span>\n                </div>\n                <Form ref={this.formRef} onFinish={this.onFinish} {...formItemLayout(6, 14)}>\n                    <FormCom searchArr={formArr} />\n                    <div className=\"set_possword\">\n                        <Checkbox checked={checked} onChange={this.onCheckedChange}>\n                            记住密码\n                        </Checkbox>\n                        <div className=\"forget common_color\">忘记密码？</div>\n                    </div>\n                    <Button type=\"primary\" size=\"large\" htmlType=\"submit\" block>\n                        登 录\n                    </Button>\n                </Form>\n            </div>\n        );\n    }\n}\nconst mapState = (state = {}) => ({});\nconst mapDispatch = (dispatch) => ({});\nexport default connect(mapState, mapDispatch)(withRouter(Login));\n","import React from 'react';\n// import { connect } from 'react-redux';\nimport './index.less';\nimport Login from '@/components/login';\n\nconst LoginCom = () => {\n    return (\n        <div className=\"login-layout\">\n            <div className=\"login-content\">\n                <Login />\n            </div>\n        </div>\n    );\n};\n\nexport default LoginCom;\n"],"sourceRoot":""}