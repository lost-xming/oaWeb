{"version":3,"sources":["app/process/cardCom.js","app/process/cardLineCom.js","app/process/cardInfo.js","app/process/renderCard.jsx","app/process/setting.jsx"],"names":["cardType","AddDepartment","props","initData","a","state","this","setState","defaultValue","onCardClick","acitve","onRemoveClick","userNames","directorValue","directorArr","label","personnelTargets","map","item","name","join","removeClass","type","className","onClick","CloseCircleOutlined","React","Component","defaultProps","connect","dispatch","setPersonnelList","Common","onCardLineClick","cardPopDom","placement","id","title","onConfirm","okText","cancelText","PlusCircleFilled","CaretDownFilled","Option","Select","typeArr","value","personnelArr","disabled","CardInfo","typeValue","personnelValue","personnelTargetId","targetDep","expandedKeys","setDefaultKeys","keys","expandedArr","itemValue","strArr","split","splice","length","newArr","push","Set","onCancel","onOk","formRef","current","submit","onSave","onOkCallback","getPersonnel","onReset","personnelList","arr","personArr","filter","indexOf","onTypeChange","e","target","onPersonnelChange","onPersonnelCheck","selectedKeys","onDirectorValueChange","onExpand","resetData","people","deps","key","newData","newItem","children","it","departments","Array","isArray","depsItem","_renderTypeUp","_renderPersonnel","_renderCcItem","_renderOption2","_renderTargetPer","_renderMan","_renderTargetPersonnel","createRef","Group","onChange","index","departmentList","newTreeList","setTreeDataFun","treeData","checkable","checkedKeys","onCheck","allowClear","placeholder","style","width","danger","CardPage","list","newList","cardActive","visible","onDrawerClose","values","status","mobile","createTime","cardData","onClose","_renderDrawer","Process"],"mappings":"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","file":"static/js/17.8a801787.chunk.js","sourcesContent":["import React from 'react';\nimport PropType from 'prop-types';\nimport { connect } from 'react-redux';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { directorArr } from '../../utils/index';\nimport './card.less';\n\nconst cardType = ['发起人', '审核人', '抄送人'];\nclass AddDepartment extends React.Component {\n    static propTypes = {\n        defaultValue: PropType.object,\n        onCardClick: PropType.func,\n        acitve: PropType.bool,\n        onRemoveClick: PropType.func,\n    };\n\n    static defaultProps = {\n        defaultValue: {},\n        onCardClick: () => { },\n        onRemoveClick: () => { },\n        acitve: false,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n        this.initData();\n    }\n\n    componentWillUnmount() {\n        this.setState = () => false;\n    }\n\n    initData = async () => { };\n\n    render() {\n        const { defaultValue, onCardClick, acitve, onRemoveClick } = this.props;\n        const userNames = (defaultValue.directorValue || defaultValue.directorValue === 0)\n            ? directorArr[defaultValue.directorValue].label :\n            defaultValue.personnelTargets.map(item => item.name).join(',');\n        const removeClass = !(!acitve || defaultValue.type === 0)\n            ? 'card_remove' : 'display_card_remove card_remove';\n        return (\n            <div className={acitve ? 'card_box card_active_box' : 'card_box'}>\n                <div onClick={onCardClick}>\n                    <div className={`card_title card_title_option${defaultValue.type}`}>{cardType[defaultValue.type]}</div>\n                    <div className=\"card_content\">{userNames}</div>\n                </div>\n                {defaultValue.type === 0 ? null : (\n                    <div\n                        className={removeClass}\n                        onClick={onRemoveClick}\n                    >\n                        <CloseCircleOutlined />\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapDispatch = (dispatch) => {\n    return {\n        setPersonnelList: dispatch.Common.setPersonnelList,\n    };\n};\nconst mapState = (state) => {\n    return {\n        // departmentList: state.Common.departmentList,\n    };\n};\nexport default connect(mapState, mapDispatch)(AddDepartment);\n","import React from 'react';\nimport PropType from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Popconfirm, Divider } from 'antd';\nimport { PlusCircleFilled, CaretDownFilled } from '@ant-design/icons';\nimport './card.less';\n\nclass AddDepartment extends React.Component {\n    static propTypes = {\n        onCardLineClick: PropType.func,\n    };\n\n    static defaultProps = {\n        onCardLineClick: () => { },\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    componentDidMount() {\n        this.initData();\n    }\n\n    componentWillUnmount() {\n        this.setState = () => false;\n    }\n\n    initData = async () => { };\n\n    render() {\n        const { onCardLineClick } = this.props;\n        const cardPopDom = <div>添加抄送/审核节点？</div>;\n        return (\n            <div className=\"card_line_box\">\n                    <div className=\"card_line_disp\">\n                        <Divider type=\"vertical\" className=\"card_line\" />\n                    </div>\n                    <div className=\"card_line_add common_color\">\n                        <Popconfirm\n                            placement=\"right\"\n                            id=\"card_pop\"\n                            title={cardPopDom}\n                            onConfirm={onCardLineClick}\n                            okText=\"确定\"\n                            cancelText=\"取消\">\n                            <PlusCircleFilled className=\"card_line_add_icon\" />\n                        </Popconfirm>\n                    </div>\n                    <div className=\"card_icon_box\">\n                        <CaretDownFilled />\n                    </div>\n                </div>\n        );\n    }\n}\n\nconst mapDispatch = (dispatch) => {\n    return {\n        setPersonnelList: dispatch.Common.setPersonnelList,\n    };\n};\nconst mapState = (state) => {\n    return {\n        // departmentList: state.Common.departmentList,\n    };\n};\nexport default connect(mapState, mapDispatch)(AddDepartment);\n","import React from 'react';\nimport PropType from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Tree, Button, Radio, Select } from 'antd';\nimport { directorArr ,setTreeDataFun} from '../../utils/index';\n// import FormCom from '../../components/searchCom/formCom';\nimport './cardPage.less';\n\nconst { Option } = Select;\nconst typeArr = [{ value: 1, label: '审核人' }, { value: 2, label: '抄送人' }];\nconst personnelArr = [\n    { value: 0, label: '指定人员' },\n    { value: 1, label: '主管' },\n    { value: 2, label: '角色', disabled: true },\n    { value: 3, label: '连续多级主管', disabled: true },\n    { value: 4, label: '发起人自己', disabled: true },\n];\n\nclass CardInfo extends React.Component {\n    static propTypes = {\n        departmentList: PropType.array,\n        defaultValue: PropType.object,\n        setPersonnelList: PropType.func,\n        personnelList: PropType.array,\n        onOkCallback: PropType.func,\n    };\n\n    static defaultProps = {\n        departmentList: [],\n        setPersonnelList: () => { },\n        defaultValue: {},\n        personnelList: [],\n        onOkCallback: () => { },\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            typeValue: 1,\n            personnelValue: 0,\n            personnelTargetId: [],\n            directorValue: 0,\n            expandedKeys: [],\n        };\n        this.formRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.initData();\n    }\n\n    componentWillUnmount() {\n        this.setState = () => false;\n    }\n\n    initData = async () => {\n        const { defaultValue } = this.props;\n        this.setState({\n            typeValue: defaultValue.type,\n            personnelValue: defaultValue.personnelValue,\n            personnelTargetId: defaultValue.targetDep,\n            directorValue: defaultValue.directorValue,\n            expandedKeys: this.setDefaultKeys(defaultValue.targetDep),\n        });\n    };\n\n    setDefaultKeys = (keys) => {\n        const expandedArr = [];\n        keys.map(itemValue => {\n            const strArr = itemValue.split('-');\n            strArr.splice(strArr.length - 1, 1);\n            const newArr = strArr.map((item) => {\n                return `dep-${item}`;\n            });\n            expandedArr.push(...newArr);\n            return null;\n        });\n        return [...new Set(expandedArr)];\n     }\n\n    onCancel = () => {\n        // const { onModalCancel } = this.props;\n        // onModalCancel();\n    }\n\n    onOk = () => {\n        this.formRef.current.submit();\n    }\n\n    onSave = () => {\n        const { onOkCallback } = this.props;\n        const { typeValue, personnelValue, personnelTargetId, directorValue } = this.state;\n        const params = {\n            type: typeValue,\n            personnelValue: typeValue === 1 ? personnelValue : null,\n            directorValue: typeValue === 1 && personnelValue === 1 ? directorValue : null,\n            personnelTargets: ((typeValue === 1 && personnelValue === 0) || typeValue === 2)\n                ? this.getPersonnel(personnelTargetId) : [],\n            targetDep: ((typeValue === 1 && personnelValue === 0) || typeValue === 2)\n            ? personnelTargetId : [],\n        };\n        onOkCallback(params);\n    }\n\n    onReset = () => {\n        this.setState({\n            typeValue: 1,\n            personnelValue: 0,\n            personnelTargetId: [],\n            directorValue: 0,\n            expandedKeys: [],\n        });\n    }\n\n    getPersonnel = (personnelValue = []) => {\n        const { personnelList } = this.props;\n\n        const arr = personnelValue.map(item => {\n            const strArr = item.split('-');\n            return strArr[strArr.length - 1];\n        });\n        const personArr = personnelList.filter(item => {\n            return arr.indexOf(`${item.id}`) > -1;\n        });\n        return personArr;\n     }\n\n    onTypeChange = (e) => {\n        this.setState({\n            typeValue: e.target.value,\n        });\n    }\n\n    onPersonnelChange = (e) => {\n        this.setState({\n            personnelValue: e.target.value,\n        });\n    }\n\n    onPersonnelCheck = (selectedKeys) => {\n        this.setState({\n            personnelTargetId: selectedKeys,\n        });\n    }\n\n    onDirectorValueChange = (value) => {\n        this.setState({\n            directorValue: value,\n        });\n    }\n\n    onExpand = (keys) => {\n        this.setState({\n            expandedKeys: keys,\n        });\n    }\n\n    resetData = (people, deps, key = null) => {\n        const newData = [];\n        deps.map(item => {\n            const newItem = {\n                title: `${item.name} dep-${item.id}`,\n                key: `dep-${item.id}`,\n                disabled: true,\n                children: [],\n            };\n            const childrenArr = people.filter(it => it.departments.indexOf(item.id) > -1);\n            childrenArr.map(it => {\n                newItem.children.push(\n                    {\n                        title: `${it.name} - ${key ? `${key}-` : ''}${item.id}-${it.id}`,\n                        key: `${key ? `${key}-` : ''}${item.id}-${it.id}`,\n                    },\n                );\n                return null;\n            });\n            // 子集\n            if (item.children && Array.isArray(item.children)) {\n                const depsItem = this.resetData(people, item.children, `${key ? `${key}-` : ''}${item.id}`);\n                newItem.children.push(...depsItem);\n            }\n            newData.push(newItem);\n            return null;\n        });\n        return newData;\n    }\n\n    _renderTypeUp = () => {\n        const { typeValue } = this.state;\n        switch (typeValue) {\n            case 1:\n                return this._renderPersonnel();\n            case 2:\n                return this._renderCcItem();\n            default:\n                return null;\n        }\n    }\n\n    _renderOption2 = () => {\n        const { personnelValue } = this.state;\n        switch (personnelValue) {\n            case 0:\n               return this._renderTargetPer();\n            case 1:\n               return this._renderMan();\n            case 2:\n               return null;\n            case 3:\n               return null;\n            case 4:\n               return null;\n            default:\n                return null;\n        }\n     }\n\n    _renderCcItem = () => {\n        return (\n            <div className=\"type_option\">\n                <div className=\"type_option_label\">选择抄送人员：</div>\n                {this._renderTargetPersonnel()}\n            </div>\n        );\n    }\n\n    _renderPersonnel() {\n        const { personnelValue } = this.state;\n        return (\n            <div className=\"type_option\">\n                <div className=\"type_option_label\">审核人设置：</div>\n                <Radio.Group onChange={this.onPersonnelChange} value={personnelValue}>\n                    {personnelArr.map((it, index) => {\n                        return <Radio key={`${index}_radio`} disabled={it.disabled} value={it.value}>{it.label}</Radio>;\n                    })}\n                </Radio.Group>\n            </div>\n        );\n    }\n\n    _renderTargetPersonnel() {\n        const { personnelList, departmentList } = this.props;\n        const { personnelTargetId, expandedKeys } = this.state;\n        const newTreeList = setTreeDataFun(departmentList);\n        const treeData = this.resetData(personnelList, newTreeList);\n        return (\n            <div>\n                <div className=\"tips\">不能超过20人</div>\n                <Tree\n                    checkable\n                    checkedKeys={personnelTargetId}\n                    expandedKeys={expandedKeys}\n                    onCheck={this.onPersonnelCheck}\n                    treeData={treeData}\n                    onExpand={this.onExpand}\n                />\n            </div>\n        );\n    }\n\n    _renderMan() {\n        const { directorValue, typeValue } = this.state;\n        if (typeValue !== 1) {\n            return null;\n        }\n\n        return (\n            <div className=\"type_option\">\n                <div className=\"type_option_label\">发起人的：</div>\n                <Select\n                    allowClear\n                    value={directorValue}\n                    placeholder=\"请选择...\"\n                    onChange={this.onDirectorValueChange}\n                    style={{ width: 150 }}\n                    >\n                    {directorArr.map((it) => {\n                        return (\n                            <Option key={it.value} value={it.value}>\n                                {it.label}\n                            </Option>\n                        );\n                    })}\n                </Select>\n            </div>\n        );\n    }\n\n    _renderTargetPer() {\n        const { typeValue } = this.state;\n        if (typeValue !== 1) {\n            return null;\n        }\n        return (\n            <div className=\"type_option\">\n                <div className=\"type_option_label\">选择人员：</div>\n                {this._renderTargetPersonnel()}\n            </div>\n        );\n    }\n\n    render() {\n        const { typeValue } = this.state;\n        return (\n            <div className=\"card_info\">\n                <div className=\"type_option\">\n                    <div className=\"type_option_label\">节点类型：</div>\n                    <Radio.Group onChange={this.onTypeChange} value={typeValue}>\n                        {typeArr.map((it, index) => {\n                            return <Radio key={`${index}_radio`} value={it.value}>{it.label}</Radio>;\n                        })}\n                    </Radio.Group>\n                </div>\n                {this._renderTypeUp()}\n                {this._renderOption2()}\n                <div className=\"card_form_btns\">\n                    <Button type=\"primary\" className=\"btn_margin\" onClick={this.onSave}>提交</Button>\n                    <Button danger onClick={this.onReset}>重置</Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapDispatch = (dispatch) => {\n    return {\n        setPersonnelList: dispatch.Common.setPersonnelList,\n    };\n};\nconst mapState = (state) => {\n    return {\n        departmentList: state.Common.departmentList,\n        personnelList: state.Common.personnelList,\n    };\n};\nexport default connect(mapState, mapDispatch)(CardInfo);\n","import React, { Fragment } from 'react';\nimport PropType from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Drawer } from 'antd';\nimport CardCom from './cardCom';\nimport CardLineCom from './cardLineCom';\nimport CardInfoCom from './cardInfo';\nimport './cardPage.less';\n\nclass CardPage extends React.Component {\n    static propTypes = {\n        // departmentList: PropType.array,\n        personnelList: PropType.array,\n    };\n\n    static defaultProps = {\n        // departmentList: [],\n        personnelList: [],\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            cardActive: 0,\n            list: [\n                {\n                    type: 0,\n                    personnelTargets: [{ name: '所有人' }],\n                    targetDep: [],\n                    personnelValue: null,\n                    directorValue: null,\n                },\n                {\n                    type: 2,\n                    personnelTargets: [\n                        {\n                            id: 9,\n                            name: '王先生9',\n                            departments: '1,5,7',\n                            status: 1,\n                            mobile: '15122223333',\n                            createTime: '2021-10-07 12:00:01',\n                        },\n                    ],\n                    targetDep: ['1-9'],\n                    personnelValue: null,\n                    directorValue: null,\n                },\n                {\n                    type: 1,\n                    personnelTargets: [\n                        {\n                            id: 7,\n                            name: '李女士7',\n                            departments: '3,6,9',\n                            status: 1,\n                            mobile: '15122223333',\n                            createTime: '2021-10-07 12:00:01',\n                        },\n                    ],\n                    targetDep: ['1-2-3-7'],\n                    personnelValue: 0,\n                    directorValue: null,\n                },\n                {\n                    type: 1,\n                    personnelTargets: [\n                        {\n                            id: 8,\n                            name: '李女士8',\n                            departments: '6,10,12',\n                            status: 1,\n                            mobile: '15122223333',\n                            createTime: '2021-10-07 12:00:01',\n                        },\n                    ],\n                    targetDep: ['11-12-8'],\n                    personnelValue: 0,\n                    directorValue: null,\n                },\n            ],\n        };\n    }\n\n    componentDidMount() {}\n\n    componentWillUnmount() {\n        this.setState = () => false;\n    }\n\n    initData = async () => {};\n\n    onConfirm = (index) => {\n        const { list } = this.state;\n        const newList = [...list];\n        newList.splice(index + 1, 0, {\n            type: 1,\n            personnelTargets: [\n                {\n                    name: '编辑人员',\n                },\n            ],\n            targetDep: [],\n            personnelValue: null,\n            directorValue: null,\n        });\n        this.setState({ list: newList });\n    };\n\n    onCardClick = (index) => {\n        this.setState({\n            cardActive: index,\n            visible: index !== 0,\n        });\n    };\n\n    onRemoveClick = (index) => {\n        const { list } = this.state;\n        const newList = [...list];\n        newList.splice(index, 1);\n        this.setState({ list: newList, cardActive: 0, visible: false });\n    };\n\n    onDrawerClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    onOkCallback = (values) => {\n        const { list, cardActive } = this.state;\n        const newList = [...list];\n        newList[cardActive] = values;\n        this.setState({\n            list: newList,\n        });\n        this.onDrawerClose();\n    };\n\n    _renderDrawer() {\n        const { visible, list, cardActive } = this.state;\n        const cardData = list[cardActive];\n        return (\n            <Drawer\n                width={700}\n                title=\"节点详情\"\n                placement=\"right\"\n                onClose={this.onDrawerClose}\n                visible={visible}>\n                <CardInfoCom defaultValue={cardData} onOkCallback={this.onOkCallback} />\n            </Drawer>\n        );\n    }\n\n    render() {\n        const { cardActive, list, visible } = this.state;\n        return (\n            <Fragment>\n                <div className=\"card_page\">\n                    {list.map((item, index) => {\n                        return (\n                            <div key={`${index}_card`}>\n                                <CardCom\n                                    onCardClick={() => this.onCardClick(index)}\n                                    acitve={index === cardActive}\n                                    defaultValue={item}\n                                    onRemoveClick={() => this.onRemoveClick(index)}\n                                />\n                                <CardLineCom\n                                    acitve={index === cardActive}\n                                    onCardLineClick={() => this.onConfirm(index)}\n                                />\n                            </div>\n                        );\n                    })}\n                    <div className=\"card_end\">流程结束</div>\n                </div>\n                {visible ? this._renderDrawer() : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapDispatch = (dispatch) => {\n    return {};\n};\nconst mapState = (state) => {\n    return {\n        // departmentList: state.Common.departmentList,\n        personnelList: state.Common.personnelList,\n    };\n};\nexport default connect(mapState, mapDispatch)(CardPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport CardCom from './renderCard';\nimport './index.less';\n\nclass Process extends React.Component {\n    static propTypes = {};\n\n    static defaultProps = {};\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {}\n\n    componentWillUnmount() {\n        this.setState = () => false;\n    }\n\n    initData = async () => {};\n\n    render() {\n        return (\n            <div className=\"process_page\">\n                <CardCom />\n            </div>\n        );\n    }\n}\n\nconst mapDispatch = (dispatch) => {\n    return {};\n};\nconst mapState = (state) => {\n    return {};\n};\nexport default connect(mapState, mapDispatch)(Process);\n"],"sourceRoot":""}