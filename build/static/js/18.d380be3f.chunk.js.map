{"version":3,"sources":["app/process/index.jsx"],"names":["TabPane","Tabs","tabs","title","key","Process","props","initData","a","onTabsChange","k","setState","activeTab","state","this","onChange","activeKey","type","map","item","tab","index","iconDom","React","createElement","Icon","icon","className","applicationList","recentArr","filter","recentArr2","recentArr3","recentArr4","recentArr5","_renderItemCard","_renderTabs","_renderTab1","Component","defaultProps","personnelList","connect","Common","dispatch"],"mappings":"8OASQA,G,OAAYC,IAAZD,SACFE,EAAO,CACT,CACIC,MAAO,eACPC,IAAK,KAET,CACID,MAAO,qBACPC,IAAK,KAET,CACID,MAAO,qBACPC,IAAK,KAET,CACID,MAAO,qBACPC,IAAK,KAET,CACID,MAAO,qBACPC,IAAK,MAGPC,E,kDAaF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAYVC,SAbmB,sBAaR,sBAAAC,EAAA,0FAbQ,EAenBC,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVC,UAAWF,KAff,EAAKG,MAAQ,CACTD,UAAW,KAHA,E,qDAOnB,c,kCAEA,WACIE,KAAKH,SAAW,kBAAM,K,yBAW1B,WACI,IAAQC,EAAcE,KAAKD,MAAnBD,UACR,OACI,kBAAC,IAAD,CAAMG,SAAUD,KAAKL,aAAcO,UAAWJ,EAAWK,KAAK,QACzDf,EAAKgB,KAAI,SAACC,GACP,OAAO,kBAACnB,EAAD,CAASoB,IAAKD,EAAKhB,MAAOC,IAAG,UAAKe,EAAKf,a,6BAM9D,SAAgBe,EAAME,GAClB,IAAMC,EAAUC,IAAMC,cAAcC,EAAKN,EAAKO,OAC9C,OACI,yBAAKtB,IAAG,UAAKiB,EAAL,SAAmBM,UAAU,aACjC,yBAAKA,UAAU,kBACX,0BAAMA,UAAU,kBAAkBL,IAErCH,EAAKhB,S,yBAKlB,WAAe,IAAD,OACFyB,EAAoBd,KAAKR,MAAzBsB,gBAER,GAAkB,MADId,KAAKD,MAAnBD,UAEJ,OAAO,KAEX,IAAMiB,EAAYD,EAAgBE,QAAO,SAACX,GAAD,OAAwB,IAAdA,EAAKF,QAClDc,EAAaH,EAAgBE,QAAO,SAACX,GAAD,OAAwB,IAAdA,EAAKF,QACnDe,EAAaJ,EAAgBE,QAAO,SAACX,GAAD,OAAwB,IAAdA,EAAKF,QACnDgB,EAAaL,EAAgBE,QAAO,SAACX,GAAD,OAAwB,IAAdA,EAAKF,QACnDiB,EAAaN,EAAgBE,QAAO,SAACX,GAAD,OAAwB,IAAdA,EAAKF,QACzD,OACI,6BACI,6BACI,yBAAKU,UAAU,gBAAf,4BACA,yBAAKA,UAAU,eACVE,EAAUX,KAAI,SAACC,EAAME,GAClB,OAAO,EAAKc,gBAAgBhB,EAAME,OAG1C,kBAAC,IAAD,OAEJ,6BACI,yBAAKM,UAAU,gBAAf,gBACA,yBAAKA,UAAU,eACVI,EAAWb,KAAI,SAACC,EAAME,GACnB,OAAO,EAAKc,gBAAgBhB,EAAME,OAG1C,kBAAC,IAAD,OAEJ,6BACI,yBAAKM,UAAU,gBAAf,4BACA,yBAAKA,UAAU,eACVK,EAAWd,KAAI,SAACC,EAAME,GACnB,OAAO,EAAKc,gBAAgBhB,EAAME,OAG1C,kBAAC,IAAD,OAEJ,6BACI,yBAAKM,UAAU,gBAAf,4BACA,yBAAKA,UAAU,eACVM,EAAWf,KAAI,SAACC,EAAME,GACnB,OAAO,EAAKc,gBAAgBhB,EAAME,OAG1C,kBAAC,IAAD,OAEJ,6BACI,yBAAKM,UAAU,gBAAf,4BACA,yBAAKA,UAAU,eACVO,EAAWhB,KAAI,SAACC,EAAME,GACnB,OAAO,EAAKc,gBAAgBhB,EAAME,OAG1C,kBAAC,IAAD,U,oBAMhB,WACI,OACI,yBAAKM,UAAU,gBACVb,KAAKsB,cACLtB,KAAKuB,mB,GA3HAd,IAAMe,WAAtBjC,EAOKkC,aAAe,CAElBC,cAAe,GACfZ,gBAAiB,IAiIVa,uBAPE,SAAC5B,GACd,MAAO,CAEH2B,cAAe3B,EAAM6B,OAAOF,cAC5BZ,gBAAiBf,EAAM6B,OAAOd,oBAPlB,SAACe,GACjB,MAAO,KASIF,CAA+BpC","file":"static/js/18.d380be3f.chunk.js","sourcesContent":["import React from 'react';\nimport PropType from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Icon from '@ant-design/icons';\nimport { Tabs, Divider } from 'antd';\n// import { setTreeDataFun } from './../../utils/index';\n// import CardCom from './renderCard';\nimport './index.less';\n\nconst { TabPane } = Tabs;\nconst tabs = [\n    {\n        title: '全部',\n        key: '0',\n    },\n    {\n        title: '待处理',\n        key: '1',\n    },\n    {\n        title: '已处理',\n        key: '2',\n    },\n    {\n        title: '已发起',\n        key: '3',\n    },\n    {\n        title: '我收到',\n        key: '4',\n    },\n];\nclass Process extends React.Component {\n    static propTypes = {\n        // departmentList: PropType.array,\n        personnelList: PropType.array,\n        applicationList: PropType.array,\n    };\n\n    static defaultProps = {\n        // departmentList: [],\n        personnelList: [],\n        applicationList: [],\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeTab: '0',\n        };\n    }\n\n    componentDidMount() {}\n\n    componentWillUnmount() {\n        this.setState = () => false;\n    }\n\n    initData = async () => {};\n\n    onTabsChange = (k) => {\n        this.setState({\n            activeTab: k,\n        });\n    };\n\n    _renderTabs() {\n        const { activeTab } = this.state;\n        return (\n            <Tabs onChange={this.onTabsChange} activeKey={activeTab} type=\"card\">\n                {tabs.map((item) => {\n                    return <TabPane tab={item.title} key={`${item.key}`} />;\n                })}\n            </Tabs>\n        );\n    }\n\n    _renderItemCard(item, index) {\n        const iconDom = React.createElement(Icon[item.icon]);\n        return (\n            <div key={`${index}_card`} className=\"item_card\">\n                <div className=\"item_card_left\">\n                    <span className=\"item_card_icon\">{iconDom}</span>\n                </div>\n                {item.title}\n            </div>\n        );\n    }\n\n    _renderTab1() {\n        const { applicationList } = this.props;\n        const { activeTab } = this.state;\n        if (activeTab !== '0') {\n            return null;\n        }\n        const recentArr = applicationList.filter((item) => item.type === 1);\n        const recentArr2 = applicationList.filter((item) => item.type === 2);\n        const recentArr3 = applicationList.filter((item) => item.type === 3);\n        const recentArr4 = applicationList.filter((item) => item.type === 4);\n        const recentArr5 = applicationList.filter((item) => item.type === 5);\n        return (\n            <div>\n                <div>\n                    <div className=\"recent_title\">最近使用</div>\n                    <div className=\"recent_list\">\n                        {recentArr.map((item, index) => {\n                            return this._renderItemCard(item, index);\n                        })}\n                    </div>\n                    <Divider />\n                </div>\n                <div>\n                    <div className=\"recent_title\">考勤</div>\n                    <div className=\"recent_list\">\n                        {recentArr2.map((item, index) => {\n                            return this._renderItemCard(item, index);\n                        })}\n                    </div>\n                    <Divider />\n                </div>\n                <div>\n                    <div className=\"recent_title\">人力行政</div>\n                    <div className=\"recent_list\">\n                        {recentArr3.map((item, index) => {\n                            return this._renderItemCard(item, index);\n                        })}\n                    </div>\n                    <Divider />\n                </div>\n                <div>\n                    <div className=\"recent_title\">财务中心</div>\n                    <div className=\"recent_list\">\n                        {recentArr4.map((item, index) => {\n                            return this._renderItemCard(item, index);\n                        })}\n                    </div>\n                    <Divider />\n                </div>\n                <div>\n                    <div className=\"recent_title\">员工自助</div>\n                    <div className=\"recent_list\">\n                        {recentArr5.map((item, index) => {\n                            return this._renderItemCard(item, index);\n                        })}\n                    </div>\n                    <Divider />\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"process_page\">\n                {this._renderTabs()}\n                {this._renderTab1()}\n            </div>\n        );\n    }\n}\n\nconst mapDispatch = (dispatch) => {\n    return {};\n};\nconst mapState = (state) => {\n    return {\n        // departmentList: state.Common.departmentList,\n        personnelList: state.Common.personnelList,\n        applicationList: state.Common.applicationList,\n    };\n};\nexport default connect(mapState, mapDispatch)(Process);\n"],"sourceRoot":""}