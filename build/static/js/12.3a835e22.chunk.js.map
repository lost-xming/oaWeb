{"version":3,"sources":["components/formItem/index.js","components/searchCom/formCom.js","components/searchCom/formDisCom.js","app/task/option1.jsx","app/task/detail.jsx"],"names":["TextArea","Input","RangePicker","Group","DatePicker","Option","Select","TreeNode","TreeSelect","noFun","Format","Format2","FormInputItem","item","defaultValue","required","validator","onChange","placeholder","addonBefore","name","label","onBlurFun","extra","suffix","addonAfter","onEnter","disabled","inpuType","others","style","className","maxLength","placeholderStr","onChangeFun","onEnterFun","rules","message","Item","key","initialValue","type","onBlur","allowClear","onPressEnter","FormDesInputItem","FormInputItem2","Password","FormSelectItem","mode","arr","map","it","value","lab","FormDesSelectItem","valueArr","filter","length","FormTimerItem","showTime","moment","timer","format","FormHHTimerItem","FormDesHHTimerItem","FormRangePckerItem","FormTextAreaItem","autoSize","minRows","maxRows","showCount","rows","FormDesTextAreaItem","FormRadioItem","index","FormFileItem","url","beforeUpload","normFile","normFileFun","beforeUploadFun","tokenStr","localStorage","getItem","token","JSON","parse","valuePropName","getValueFromEvent","action","listType","headers","FormDesFileItem","imgs","PreviewGroup","width","src","FormTreeSelectItem","multiple","renderChildren","arrData","id","title","children","Array","isArray","showSearch","dropdownStyle","maxHeight","overflow","treeDefaultExpandAll","SearchCom","this","props","searchArr","isNotShow","_renderItem","Component","defaultProps","TaskDetail","Tabs","TabPane","initData","a","onFinish","values","setTaskList","history","userInfo","getUserInfo","window","parseInt","Math","random","applicationType","applicationId","userName","userId","createTime","taskEndTime","startTime","endTime","cause","evidence","status","statusStep","process","dep","directorId","desc","ccUserId","userType","success","push","onAgree","updateTaskList","callback","processLen","newParams","onTurnDown","state","setState","isDes","Object","keys","isTagetTask","formArr","formArr2","height","fallback","imgbase","dashed","ref","formRef","formItemLayout","onClick","danger","htmlType","_renderContent","React","personnelList","applicationList","connect","Common","dispatch","withRouter","onTabsChange","k","activeTab","activeKey","tabBarExtraContent","tab","_renderTabs"],"mappings":"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","file":"static/js/12.3a835e22.chunk.js","sourcesContent":["import React from 'react';\nimport { Input, Form, Select, DatePicker, Upload, Button, Radio, TreeSelect, Image } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport './index.css';\n\nconst { TextArea, Group } = Input;\nconst { RangePicker } = DatePicker;\nconst { Option } = Select;\nconst { TreeNode } = TreeSelect;\nconst noFun = () => { };\nconst Format = 'YYYY-MM-DD';\nconst Format2 = 'YYYY-MM-DD h:mm';\nexport const FormInputItem = (item = {}, defaultValue = {}) => {\n    const {\n        required,\n        validator,\n        onChange,\n        placeholder,\n        addonBefore,\n        name,\n        label,\n        onBlurFun,\n        extra,\n        addonAfter,\n        suffix,\n        onEnter,\n        disabled,\n        inpuType,\n        others = {},\n        style,\n        className = '',\n        maxLength = 10,\n    } = item;\n    const placeholderStr = placeholder || `请输入${label}`;\n    const onChangeFun = onChange || noFun;\n    const onEnterFun = onEnter || noFun;\n    const rules = validator ? [{ validator }] : [{ required, message: `请输入${label}` }];\n    // const addonAfterNode = addonAfter ? addonAfter() : null;\n    return (\n        <Form.Item\n            key={name}\n            label={label}\n            name={name}\n            required={required}\n            initialValue={defaultValue[name]}\n            extra={extra}\n            rules={rules}\n            {...others}\n        >\n            <Input\n                addonBefore={addonBefore}\n                // addonAfter={addonAfterNode}\n                disabled={disabled}\n                type={inpuType}\n                onBlur={onBlurFun}\n                allowClear\n                onPressEnter={onEnterFun}\n                style={style}\n                suffix={suffix}\n                maxLength={maxLength}\n                className={className}\n                onChange={onChangeFun}\n                placeholder={placeholderStr}\n            />\n        </Form.Item>\n    );\n};\nexport const FormDesInputItem = (item = {}, defaultValue = {}) => {\n    const {\n        required,\n        name,\n        label,\n    } = item;\n    return (\n        <Form.Item\n            key={name}\n            label={label}\n            required={required}\n            initialValue={defaultValue[name]}\n        >\n            {defaultValue[name]}\n        </Form.Item>\n    );\n};\n\nexport const FormInputItem2 = (item = {}, defaultValue = {}) => {\n    const {\n        required,\n        validator,\n        placeholder,\n        name,\n        label,\n        onBlurFun,\n        onEnter,\n        others = {},\n        style,\n        className = '',\n        maxLength = 10,\n    } = item;\n    const placeholderStr = placeholder || `请输入${label}`;\n    const onEnterFun = onEnter || noFun;\n    const rules = validator ? [{ validator }] : [{ required, message: `请输入${label}` }];\n    // const addonAfterNode = addonAfter ? addonAfter() : null;\n    return (\n        <Form.Item\n            key={name}\n            label={label}\n            name={name}\n            required={required}\n            initialValue={defaultValue[name]}\n            rules={rules}\n            {...others}\n        >\n            <Input.Password\n                onBlur={onBlurFun}\n                style={style}\n                maxLength={maxLength}\n                className={className}\n                placeholder={placeholderStr}\n                onPressEnter={onEnterFun}\n            />\n        </Form.Item>\n    );\n};\n\nexport const FormSelectItem = (item = {}, defaultValue = {}) => {\n    const { required, validator, onChange, placeholder, mode, name, label, arr, extra, disabled, others = {} } = item;\n    // const modeStr = mode || 'tags';\n    const placeholderStr = placeholder || `请选择${label}`;\n    const onChangeFun = onChange || noFun;\n    const rules = validator ? [{ validator }] : [{ required, message: `请选择${label}` }];\n    return (\n        <Form.Item\n            key={name}\n            name={name}\n            label={label}\n            extra={extra}\n            initialValue={defaultValue[name]}\n            rules={rules}\n            {...others}\n        >\n            <Select\n                allowClear\n                disabled={disabled}\n                // mode={modeStr}\n                placeholder={placeholderStr}\n                onChange={onChangeFun}\n            >\n                {arr.map((it) => {\n                    return (\n                        <Option key={it.value} value={it.value}>\n                            {it.lab || it.label}\n                        </Option>\n                    );\n                })}\n            </Select>\n        </Form.Item>\n    );\n};\n\nexport const FormDesSelectItem = (item = {}, defaultValue = {}) => {\n    const { required, name, label, arr, extra } = item;\n    const valueArr = arr.filter(it => it.value === defaultValue[name]);\n    return (\n        <Form.Item\n            key={name}\n            label={label}\n            extra={extra}\n            initialValue={defaultValue[name]}\n            required={required}\n        >\n            {(valueArr && valueArr.length) ? (valueArr[0].lab || valueArr[0].label) : ''}\n        </Form.Item>\n    );\n};\n\nexport const FormTimerItem = (item = {}, defaultValue = {}) => {\n    const { required, validator, onChange, name, showTime = false, label, extra, disabled, others = {} } = item;\n    const rules = validator ? [{ validator }] : [{ type: 'object', required, message: `请输入${label}` }];\n    const onChangeFun = onChange || noFun;\n    return (\n        <Form.Item\n            key={name}\n            name={name}\n            label={label}\n            extra={extra}\n            initialValue={defaultValue[name] ? moment(defaultValue[name]) : null}\n            rules={rules}\n            {...others}\n        >\n            <DatePicker\n                className=\"date_picker_style\"\n                disabled={disabled}\n                showTime={showTime}\n                onChange={(value, timer) => onChangeFun(value, timer, item)}\n                format={showTime ? Format2 : Format}\n            />\n        </Form.Item>\n    );\n};\n\nexport const FormHHTimerItem = (item = {}, defaultValue = {}) => {\n    const { required, validator, onChange, name, label, extra, disabled, others = {} } = item;\n    const rules = validator ? [{ validator }] : [{ type: 'object', required, message: `请输入${label}` }];\n    const onChangeFun = onChange || noFun;\n    return (\n        <Form.Item\n            key={name}\n            name={name}\n            label={label}\n            extra={extra}\n            initialValue={defaultValue[name] ? moment(defaultValue[name]) : null}\n            rules={rules}\n            {...others}\n        >\n            <DatePicker\n                className=\"date_picker_style\"\n                disabled={disabled}\n                showTime\n                onChange={(value, timer) => onChangeFun(value, timer, item)}\n                format={Format2}\n            />\n        </Form.Item>\n    );\n};\n\nexport const FormDesHHTimerItem = (item = {}, defaultValue = {}) => {\n    const { required, name, label, extra } = item;\n    return (\n        <Form.Item\n            key={name}\n            label={label}\n            extra={extra}\n            initialValue={defaultValue[name] ? moment(defaultValue[name]) : null}\n            required={required}\n        >\n            { defaultValue[name] }\n        </Form.Item>\n    );\n};\n\nexport const FormRangePckerItem = (item = {}, defaultValue = {}) => {\n    const { required, validator, onChange, name, label, extra, disabled, others = {} } = item;\n    let rules = validator ? [{ validator }] : [{ required, message: `请输入${label}` }];\n    rules = required ? rules : [];\n    const onChangeFun = onChange || noFun;\n    return (\n        <Form.Item\n            key={name}\n            name={name}\n            label={label}\n            extra={extra}\n            initialValue={defaultValue[name] ? moment(defaultValue[name]) : null}\n            rules={rules}\n            {...others}\n        >\n            <RangePicker\n                className=\"date_picker_style\"\n                disabled={disabled}\n                onChange={(value, timer) => onChangeFun(value, timer, item)}\n                format={Format}\n            />\n        </Form.Item>\n    );\n};\n\nexport const FormTextAreaItem = (item = {}, defaultValue = {}) => {\n    const { required, validator, onChange, placeholder, name, label, onBlurFun, extra, disabled, others = {} } = item;\n    const placeholderStr = placeholder || `请输入${label}`;\n    const onChangeFun = onChange || noFun;\n    const rules = validator ? [{ validator }] : [{ required, message: `请输入${label}` }];\n    return (\n        <Form.Item\n            key={name}\n            label={label}\n            name={name}\n            required={required}\n            initialValue={defaultValue[name]}\n            extra={extra}\n            rules={rules}\n            {...others}\n        >\n            <TextArea\n                disabled={disabled}\n                onBlur={onBlurFun}\n                onChange={onChangeFun}\n                placeholder={placeholderStr}\n                autoSize={{ minRows: 2, maxRows: 6 }}\n                maxLength={200}\n                showCount\n                rows={4}\n            />\n        </Form.Item>\n    );\n};\n\nexport const FormDesTextAreaItem = (item = {}, defaultValue = {}) => {\n    const { required, name, label, extra } = item;\n    return (\n        <Form.Item\n            key={name}\n            label={label}\n            required={required}\n            initialValue={defaultValue[name]}\n            extra={extra}\n        >\n            {defaultValue[name]}\n        </Form.Item>\n    );\n};\n\nexport const FormRadioItem = (item = {}, defaultValue = {}) => {\n    const { required, validator, onChange, name, label, extra, disabled, others = {}, arr = [] } = item;\n    const onChangeFun = onChange || noFun;\n    const rules = validator ? [{ validator }] : [{ required, message: `请输入${label}` }];\n    return (\n        <Form.Item\n            key={name}\n            label={label}\n            name={name}\n            required={required}\n            initialValue={defaultValue[name]}\n            extra={extra}\n            rules={rules}\n            {...others}\n        >\n            <Radio.Group disabled={disabled} onChange={onChangeFun}>\n                {arr.map((it, index) => {\n                    return <Radio key={`${index}_radio`} value={it.value}>{it.label}</Radio>;\n                })}\n            </Radio.Group>\n        </Form.Item>\n    );\n};\n\nexport const FormFileItem = (item = {}, defaultValue = {}) => {\n    const {\n        required,\n        name,\n        label,\n        disabled,\n        url,\n        extra,\n        validator,\n        onChange,\n        beforeUpload,\n        normFile,\n        others = {} } = item;\n    const rules = validator ? [{ validator }] : [{ required, message: `请上传${label}` }];\n    const onChangeFun = onChange || noFun;\n    const normFileFun = normFile || noFun;\n    const beforeUploadFun = beforeUpload || noFun;\n    const tokenStr = localStorage.getItem('token');\n    const token = tokenStr ? JSON.parse(tokenStr)?.token : '';\n    return (\n        <Form.Item\n            key={name}\n            label={label}\n            name={name}\n            required={required}\n            initialValue={defaultValue[name] || []}\n            extra={extra}\n            rules={rules}\n            valuePropName=\"fileList\"\n            getValueFromEvent={normFileFun}\n            {...others}\n        >\n            <Upload\n                name=\"file\"\n                action={url}\n                disabled={disabled}\n                listType=\"picture\"\n                beforeUpload={beforeUploadFun}\n                onChange={onChangeFun}\n                headers={{\n                    token,\n                }}\n            >\n                <Button disabled={disabled} className=\"add_file_btn\">\n                    <CloudUploadOutlined /> 上传\n                </Button>\n            </Upload>\n        </Form.Item>\n    );\n};\n\nexport const FormDesFileItem = (item = {}, defaultValue = {}) => {\n    const {\n        required,\n        name,\n        label,\n        extra,\n    } = item;\n    const imgs = defaultValue[name] ? defaultValue[name] : [];\n    return (\n        <Form.Item\n            key={name}\n            label={label}\n            required={required}\n            initialValue={defaultValue[name] || []}\n            extra={extra}\n        >\n            <Image.PreviewGroup>\n                {imgs.map((it, index) => {\n                    return <Image key={`${index}_img`} width={50} src={it} />;\n                })}\n            </Image.PreviewGroup>\n        </Form.Item>\n    );\n};\n\nexport const GroupInputItem = (...params) => {\n    const [leftSelectValue, optionArr, leftValue, onSelectChange, onInputChange] = params;\n    return (\n        <Group compact className=\"form_option1\">\n            <Select\n                value={leftSelectValue}\n                placeholder=\"请选择...\"\n                onChange={onSelectChange}\n                className=\"form_option1_left\"\n            >\n                {optionArr.map((item, index) => {\n                    return (\n                        <Option key={`option_left_${index}`} value={item.name}>\n                            {item.label}\n                        </Option>\n                    );\n                })}\n            </Select>\n            <Input\n                className=\"form_option1_right\"\n                value={leftValue}\n                style={{ width: 200 }}\n                onChange={onInputChange}\n                allowClear\n                placeholder=\"请输入...\"\n            />\n        </Group>\n    );\n};\n\nexport const FormTreeSelectItem = (item = {}, defaultValue = {}) => {\n    const {\n        required,\n        validator,\n        onChange,\n        placeholder,\n        name,\n        label,\n        multiple = false,\n        arr = [],\n        extra,\n        others = {},\n    } = item;\n    const placeholderStr = placeholder || `请选择${label}`;\n    const onChangeFun = onChange || noFun;\n    const rules = validator ? [{ validator }] : [{ required, message: `请选择${label}` }];\n    const renderChildren = (arrData = []) => {\n        return arrData.map((it) => {\n            return (\n                <TreeNode key={it.id} value={it.id} title={it.name}>\n                   {it.children && Array.isArray(it.children) && renderChildren(it.children)}\n                </TreeNode>\n            );\n        });\n     };\n    return (\n        <Form.Item\n            key={name}\n            name={name}\n            label={label}\n            extra={extra}\n            initialValue={defaultValue[name]}\n            rules={rules}\n            {...others}\n        >\n            <TreeSelect\n                showSearch\n                style={{ width: '100%' }}\n                dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\n                placeholder={placeholderStr}\n                allowClear\n                treeDefaultExpandAll\n                onChange={onChangeFun}\n                multiple={multiple}\n            >\n                {arr.map((it) => {\n                    return (\n                        <TreeNode key={it.id} value={it.id} title={it.name}>\n                            {it.children && Array.isArray(it.children) && renderChildren(it.children)}\n                        </TreeNode>\n                    );\n                })}\n            </TreeSelect>\n        </Form.Item>\n    );\n};\n","import React, { Component } from 'react';\nimport Proptypes from 'prop-types';\nimport {\n\tFormInputItem,\n\tFormInputItem2,\n    FormSelectItem,\n\tFormTimerItem,\n\tFormHHTimerItem,\n    FormTextAreaItem,\n    FormFileItem,\n\tFormRadioItem,\n\tFormTreeSelectItem,\n} from '../formItem';\nimport './index.less';\n\nclass SearchCom extends Component {\n\tstatic propTypes = {\n\t    searchArr: Proptypes.array,\n\t    defaultValue: Proptypes.object,\n\t};\n\n\tstatic defaultProps = {\n\t    searchArr: [],\n\t    defaultValue: {},\n\t};\n\n\t_renderItem() {\n\t    const { searchArr, defaultValue } = this.props;\n\t    return searchArr.map(item => {\n\t\t\tconst { type, isNotShow } = item;\n\t\t\tif (isNotShow) {\n\t\t\t\treturn null;\n\t\t\t}\n\t        switch (type) {\n\t            case 'input':\n\t\t\t\t\treturn FormInputItem(item, defaultValue);\n\t\t\t\tcase 'password':\n\t\t\t\t\treturn FormInputItem2(item, defaultValue);\n\t            case 'select':\n\t                return FormSelectItem(item, defaultValue);\n\t            case 'timer':\n\t\t\t\t\treturn FormTimerItem(item, defaultValue);\n\t\t\t\tcase 'hsTimer':\n\t\t\t\t\treturn FormHHTimerItem(item, defaultValue);\n\t            case 'textArea':\n\t                return FormTextAreaItem(item, defaultValue);\n\t            case 'file':\n\t                return FormFileItem(item, defaultValue);\n\t            case 'radio':\n\t\t\t\t\treturn FormRadioItem(item, defaultValue);\n\t\t\t\tcase 'treeSelect':\n\t\t\t\t\treturn FormTreeSelectItem(item, defaultValue);\n\t            default:\n\t                return null;\n\t        }\n\t    });\n\t}\n\n\trender() {\n\t    return (\n\t        <div className=\"form_com\">\n\t            {this._renderItem()}\n\t        </div>\n\t    );\n\t}\n}\n\nexport default SearchCom;\n","import React, { Component } from 'react';\nimport Proptypes from 'prop-types';\nimport {\n\tFormDesInputItem,\n\tFormInputItem2,\n    FormDesSelectItem,\n\tFormTimerItem,\n\tFormDesHHTimerItem,\n    FormDesTextAreaItem,\n    FormDesFileItem,\n\tFormRadioItem,\n\tFormTreeSelectItem,\n} from '../formItem';\nimport './index.less';\n\nclass SearchCom extends Component {\n\tstatic propTypes = {\n\t    searchArr: Proptypes.array,\n\t    defaultValue: Proptypes.object,\n\t};\n\n\tstatic defaultProps = {\n\t    searchArr: [],\n\t    defaultValue: {},\n\t};\n\n\t_renderItem() {\n\t    const { searchArr, defaultValue } = this.props;\n\t    return searchArr.map(item => {\n\t\t\tconst { type, isNotShow } = item;\n\t\t\tif (isNotShow) {\n\t\t\t\treturn null;\n\t\t\t}\n\t        switch (type) {\n\t            case 'input':\n\t\t\t\t\treturn FormDesInputItem(item, defaultValue);\n\t\t\t\tcase 'password':\n\t\t\t\t\treturn FormInputItem2(item, defaultValue);\n\t            case 'select':\n\t                return FormDesSelectItem(item, defaultValue);\n\t            case 'timer':\n\t\t\t\t\treturn FormTimerItem(item, defaultValue);\n\t\t\t\tcase 'hsTimer':\n\t\t\t\t\treturn FormDesHHTimerItem(item, defaultValue);\n\t            case 'textArea':\n\t                return FormDesTextAreaItem(item, defaultValue);\n\t            case 'file':\n\t                return FormDesFileItem(item, defaultValue);\n\t            case 'radio':\n\t\t\t\t\treturn FormRadioItem(item, defaultValue);\n\t\t\t\tcase 'treeSelect':\n\t\t\t\t\treturn FormTreeSelectItem(item, defaultValue);\n\t            default:\n\t                return null;\n\t        }\n\t    });\n\t}\n\n\trender() {\n\t    return (\n\t        <div className=\"form_com\">\n\t            {this._renderItem()}\n\t        </div>\n\t    );\n\t}\n}\n\nexport default SearchCom;\n","import React from 'react';\nimport PropType from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Icon from '@ant-design/icons';\nimport { Tabs, Button, Divider, Image, Form, message } from 'antd';\nimport moment from 'moment';\nimport { withRouter } from 'react-router';\nimport { formItemLayout, setTreeDataFun } from '../../utils/index';\nimport FormCom from '../../components/searchCom/formCom';\nimport FormDisCom from '../../components/searchCom/formDisCom';\nimport imgbase from '../../images/image.png';\nimport { getUserInfo } from '../../utils/localStorageSet';\nimport './index.less';\n\nconst { TabPane } = Tabs;\nclass TaskDetail extends React.Component {\n    static propTypes = {\n        personnelList: PropType.array,\n        applicationList: PropType.array,\n        defaultValue: PropType.object,\n        applicationType: PropType.array,\n        setTaskList: PropType.func,\n        updateTaskList: PropType.func,\n        history: PropType.object,\n        callback: PropType.func,\n    };\n\n    static defaultProps = {\n        personnelList: [],\n        applicationList: [],\n        defaultValue: {},\n        applicationType: [],\n        setTaskList: () => {},\n        updateTaskList: () => {},\n        callback: () => {},\n        history: {},\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {}\n\n    componentWillUnmount() {\n        this.setState = () => false;\n    }\n\n    initData = async () => {};\n\n    onFinish = async (values) => {\n        const { setTaskList, history } = this.props;\n        const userInfo = getUserInfo();\n        const item = {\n            id: 100 + window.parseInt(Math.random() * 100),\n            applicationType: values.applicationType, // 请假类型 --- 年假\n            applicationId: 2, // 流程节点类型 --- 请假申请\n            userName: userInfo.name,\n            userId: userInfo.id,\n            createTime: moment().format('YYYY-MM-DD hh:mm:ss'),\n            taskEndTime: '',\n            startTime: moment(values.startTime).format('YYYY-MM-DD hh:mm'),\n            endTime: moment(values.endTime).format('YYYY-MM-DD hh:mm'),\n            cause: values.cause,\n            evidence: values.evidence || [\n                'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n            ],\n            status: 0, // 审批状态  0审核中 1已撤销 2审核未通过 3审核通过\n            statusStep: 1, // 审批节点指针\n            process: [\n                {\n                    dep: '', // 部门\n                    directorId: '', // 主管id\n                    status: '', // 审核状态 0驳回 ， 1通过\n                    desc: '这里是被抄送人', // 反馈\n                    ccUserId: '1', // 被抄送人id\n                    userType: 1, // 当前人员类型 0发起人 1被抄送人 2审核人\n                },\n                {\n                    dep: '2', // 上级部门\n                    directorId: 2, // 主管id\n                    status: '', // 审核状态 0驳回 ， 1通过\n                    desc: '反馈意见一', // 反馈\n                    ccUserId: '', // 被抄送人id\n                    userType: 2, // 当前人员类型 0发起人 1被抄送人 2审核人\n                },\n                {\n                    dep: '1', // 上级部门\n                    directorId: 1, // 主管id\n                    status: '', // 审核状态 0驳回 ， 1通过\n                    desc: '反馈意见二', // 反馈\n                    ccUserId: '', // 被抄送人id\n                    userType: 2, // 当前人员类型 0发起人 1被抄送人 2审核人\n                },\n            ],\n        };\n        message.success('提交成功！');\n        await setTaskList(item);\n        history.push('/project/task');\n    };\n\n    onAgree = async () => {\n        const { defaultValue, updateTaskList, callback } = this.props;\n        const process = [...defaultValue.process];\n        const processLen = process.length;\n        const { statusStep } = defaultValue;\n        process[statusStep].status = 1;\n        const newParams = {\n            status: processLen >= statusStep + 1 ? 0 : 3,\n            statusStep: processLen >= statusStep + 1 ? statusStep + 1 : -1,\n            taskEndTime: processLen >= statusStep + 1 ? '' : moment().format('YYYY-MM-DD hh:mm:ss'),\n            process,\n        };\n        await updateTaskList({ ...defaultValue, ...newParams });\n        message.success('审批成功！');\n        callback();\n    };\n\n    onTurnDown = async () => {\n        const { defaultValue, updateTaskList, callback } = this.props;\n        const process = [...defaultValue.process];\n        const processLen = process.length;\n        const { statusStep } = defaultValue;\n        process[statusStep].status = 0;\n        const newParams = {\n            status: processLen >= statusStep + 1 ? 0 : 2,\n            statusStep: -1,\n            taskEndTime: processLen >= statusStep + 1 ? '' : moment().format('YYYY-MM-DD hh:mm:ss'),\n            process,\n        };\n        await updateTaskList({ ...defaultValue, ...newParams });\n        message.success('驳回成功！');\n        callback();\n    };\n\n    _renderContent() {\n        const { defaultValue, applicationType } = this.props;\n        const userInfo = getUserInfo();\n        const isDes = !!Object.keys(defaultValue).length;\n        const isTagetTask =\n            defaultValue.statusStep !== -1 &&\n            defaultValue.process[defaultValue.statusStep].directorId === userInfo.id;\n        const formArr = [\n            {\n                type: 'select',\n                name: 'applicationType',\n                label: '请假类型',\n                required: true,\n                arr: applicationType,\n                disabled: isDes,\n            },\n            {\n                type: 'hsTimer',\n                name: 'startTime',\n                label: '开始时间',\n                showTime: true,\n                required: true,\n                disabled: isDes,\n            },\n            {\n                type: 'hsTimer',\n                name: 'endTime',\n                label: '结束时间',\n                showTime: true,\n                required: true,\n                disabled: isDes,\n            },\n            {\n                type: 'input',\n                name: 'leaveTime',\n                label: '请假时长',\n                required: true,\n                disabled: isDes,\n            },\n            {\n                type: 'textArea',\n                name: 'cause',\n                label: '请假事由',\n                required: true,\n                disabled: isDes,\n            },\n        ];\n        const formArr2 = [\n            {\n                type: 'file',\n                name: 'evidence',\n                label: '证明材料',\n                arr: applicationType,\n                url: '',\n                extra: '添加图片（最多选择9张）',\n                disabled: isDes,\n            },\n        ];\n\n        return (\n            <div className=\"task_content\">\n                <h3>请假申请</h3>\n                <div className=\"task_content_gs\">\n                    <Image\n                        width={24}\n                        height={24}\n                        src=\"error\"\n                        className=\"task_title_img\"\n                        fallback={imgbase}\n                    />\n                    <span className=\"task_title_text\">蔡甸城投智能交通公司</span>\n                </div>\n                <Divider dashed />\n                <div>\n                    <Divider type=\"vertical\" className=\"line\" /> 基本信息\n                </div>\n                <Form ref={this.formRef} onFinish={this.onFinish} {...formItemLayout(6, 15)}>\n                    {isDes ? (\n                        <FormDisCom searchArr={formArr} defaultValue={defaultValue} />\n                    ) : (\n                        <FormCom searchArr={formArr} defaultValue={defaultValue} />\n                    )}\n                    <div>\n                        <Divider type=\"vertical\" className=\"line\" /> 备注信息\n                    </div>\n                    {isDes ? (\n                        <FormDisCom searchArr={formArr2} defaultValue={defaultValue} />\n                    ) : (\n                        <FormCom searchArr={formArr2} defaultValue={defaultValue} />\n                    )}\n                    <Form.Item label=\"备注\">\n                        <div className=\"remarks\">\n                            <div className=\"remarks_text\">必填信息填写后，流程将自动显示</div>\n                            {isTagetTask ? (\n                                <div className=\"form_btns\">\n                                    <Button\n                                        type=\"primary\"\n                                        onClick={this.onAgree}\n                                        className=\"form_btns_save\">\n                                        同意\n                                    </Button>\n                                    <Button\n                                        danger\n                                        onClick={this.onTurnDown}\n                                        className=\"form_btns_save\">\n                                        驳回\n                                    </Button>\n                                </div>\n                            ) : null}\n                            {defaultValue.id ? null : (\n                                <div className=\"form_btns\">\n                                    <Button\n                                        type=\"primary\"\n                                        className=\"form_btns_save\"\n                                        htmlType=\"submit\">\n                                        发起审批\n                                    </Button>\n                                    <Button htmlType=\"reset\" danger className=\"form_btns_save\">\n                                        重置\n                                    </Button>\n                                    <Button>保存草稿</Button>\n                                </div>\n                            )}\n                        </div>\n                    </Form.Item>\n                </Form>\n            </div>\n        );\n    }\n\n    render() {\n        return <div className=\"option_page\">{this._renderContent()}</div>;\n    }\n}\n\nconst mapDispatch = (dispatch) => {\n    return {\n        setTaskList: dispatch.Common.setTaskList,\n        updateTaskList: dispatch.Common.updateTaskList,\n    };\n};\nconst mapState = (state) => {\n    return {\n        // departmentList: state.Common.departmentList,\n        personnelList: state.Common.personnelList,\n        applicationList: state.Common.applicationList,\n        applicationType: state.Common.applicationType,\n    };\n};\nexport default connect(mapState, mapDispatch)(withRouter(TaskDetail));\n","import React from 'react';\nimport PropType from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Icon from '@ant-design/icons';\nimport { Tabs, Button, Divider, Image } from 'antd';\nimport Option1 from './option1';\nimport './index.less';\n\nconst { TabPane } = Tabs;\nclass TaskDetail extends React.Component {\n    static propTypes = {\n        // departmentList: PropType.array,\n        personnelList: PropType.array,\n        applicationList: PropType.array,\n    };\n\n    static defaultProps = {\n        // departmentList: [],\n        personnelList: [],\n        applicationList: [],\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeTab: '0',\n        };\n    }\n\n    componentDidMount() {}\n\n    componentWillUnmount() {\n        this.setState = () => false;\n    }\n\n    initData = async () => {};\n\n    onTabsChange = async (k) => {\n        await this.setState({\n            activeTab: k,\n        });\n        this.initData();\n    };\n\n    _renderTabs() {\n        const { activeTab } = this.state;\n        const tabs = [\n            {\n                title: '发起审批',\n                key: '0',\n            },\n            {\n                title: '查看报表',\n                key: '1',\n            },\n            {\n                title: '查看数据',\n                key: '2',\n            },\n        ];\n        return (\n            <Tabs\n                onChange={this.onTabsChange}\n                activeKey={activeTab}\n                tabBarExtraContent={<Button>草稿箱</Button>}>\n                {tabs.map((item) => {\n                    return <TabPane tab={item.title} key={`${item.key}`} />;\n                })}\n            </Tabs>\n        );\n    }\n\n    _renderContent() {\n        const { activeTab } = this.state;\n        switch (activeTab) {\n            case '0':\n                return <Option1 />;\n            default:\n                return null;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"task_detail_page\">\n                {this._renderTabs()}\n                {this._renderContent()}\n            </div>\n        );\n    }\n}\n\nconst mapDispatch = (dispatch) => {\n    return {};\n};\nconst mapState = (state) => {\n    return {\n        // departmentList: state.Common.departmentList,\n        personnelList: state.Common.personnelList,\n        applicationList: state.Common.applicationList,\n    };\n};\nexport default connect(mapState, mapDispatch)(TaskDetail);\n"],"sourceRoot":""}